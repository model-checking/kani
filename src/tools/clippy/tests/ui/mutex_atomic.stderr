error: consider using an `AtomicBool` instead of a `Mutex` here; if you just want the locking behavior and not the internal type, consider using `Mutex<()>`
  --> $DIR/mutex_atomic.rs:8:5
   |
LL |     Mutex::new(true);
   |     ^^^^^^^^^^^^^^^^
   |
   = note: `-D clippy::mutex-atomic` implied by `-D warnings`

error: consider using an `AtomicUsize` instead of a `Mutex` here; if you just want the locking behavior and not the internal type, consider using `Mutex<()>`
  --> $DIR/mutex_atomic.rs:9:5
   |
LL |     Mutex::new(5usize);
   |     ^^^^^^^^^^^^^^^^^^

error: consider using an `AtomicIsize` instead of a `Mutex` here; if you just want the locking behavior and not the internal type, consider using `Mutex<()>`
  --> $DIR/mutex_atomic.rs:10:5
   |
LL |     Mutex::new(9isize);
   |     ^^^^^^^^^^^^^^^^^^

error: consider using an `AtomicPtr` instead of a `Mutex` here; if you just want the locking behavior and not the internal type, consider using `Mutex<()>`
  --> $DIR/mutex_atomic.rs:12:5
   |
LL |     Mutex::new(&x as *const u32);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: consider using an `AtomicPtr` instead of a `Mutex` here; if you just want the locking behavior and not the internal type, consider using `Mutex<()>`
  --> $DIR/mutex_atomic.rs:13:5
   |
LL |     Mutex::new(&mut x as *mut u32);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: consider using an `AtomicUsize` instead of a `Mutex` here; if you just want the locking behavior and not the internal type, consider using `Mutex<()>`
  --> $DIR/mutex_atomic.rs:14:5
   |
LL |     Mutex::new(0u32);
   |     ^^^^^^^^^^^^^^^^
   |
   = note: `-D clippy::mutex-integer` implied by `-D warnings`

error: consider using an `AtomicIsize` instead of a `Mutex` here; if you just want the locking behavior and not the internal type, consider using `Mutex<()>`
  --> $DIR/mutex_atomic.rs:15:5
   |
LL |     Mutex::new(0i32);
   |     ^^^^^^^^^^^^^^^^

error: aborting due to 7 previous errors

