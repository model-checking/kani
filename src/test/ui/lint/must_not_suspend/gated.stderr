error[E0658]: the `must_not_suspend` lint is unstable
  --> $DIR/gated.rs:2:1
   |
LL | #![deny(must_not_suspend)]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #83310 <https://github.com/rust-lang/rust/issues/83310> for more information
   = help: add `#![feature(must_not_suspend)]` to the crate attributes to enable

error[E0658]: the `must_not_suspend` lint is unstable
  --> $DIR/gated.rs:2:1
   |
LL | #![deny(must_not_suspend)]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #83310 <https://github.com/rust-lang/rust/issues/83310> for more information
   = help: add `#![feature(must_not_suspend)]` to the crate attributes to enable

error[E0658]: the `must_not_suspend` lint is unstable
  --> $DIR/gated.rs:2:1
   |
LL | #![deny(must_not_suspend)]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #83310 <https://github.com/rust-lang/rust/issues/83310> for more information
   = help: add `#![feature(must_not_suspend)]` to the crate attributes to enable

error: `MutexGuard` held across a suspend point, but should not be
  --> $DIR/gated.rs:9:9
   |
LL |     let _guard = m.lock().unwrap();
   |         ^^^^^^
LL |     other().await;
   |     ------------- the value is held across this suspend point
   |
note: the lint level is defined here
  --> $DIR/gated.rs:2:9
   |
LL | #![deny(must_not_suspend)]
   |         ^^^^^^^^^^^^^^^^
note: holding a MutexGuard across suspend points can cause deadlocks, delays, and cause Futures to not implement `Send`
  --> $DIR/gated.rs:9:9
   |
LL |     let _guard = m.lock().unwrap();
   |         ^^^^^^
help: consider using a block (`{ ... }`) to shrink the value's scope, ending before the suspend point
  --> $DIR/gated.rs:9:9
   |
LL |     let _guard = m.lock().unwrap();
   |         ^^^^^^

error: aborting due to 4 previous errors

For more information about this error, try `rustc --explain E0658`.
