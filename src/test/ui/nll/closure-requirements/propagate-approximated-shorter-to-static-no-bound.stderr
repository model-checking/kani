note: external requirements
  --> $DIR/propagate-approximated-shorter-to-static-no-bound.rs:32:47
   |
LL |       establish_relationships(&cell_a, &cell_b, |_outlives, x, y| {
   |  _______________________________________________^
LL | |
LL | |
LL | |         // Only works if 'x: 'y:
LL | |         demand_y(x, y, x.get())
LL | |     });
   | |_____^
   |
   = note: defining type: supply::{closure#0} with closure substs [
               i16,
               for<'r, 's, 't0, 't1, 't2> extern "rust-call" fn((&ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrNamed('r) }) std::cell::Cell<&'_#1r &ReLateBound(DebruijnIndex(0), BoundRegion { var: 1, kind: BrNamed('s) }) u32>, &ReLateBound(DebruijnIndex(0), BoundRegion { var: 2, kind: BrNamed('t0) }) std::cell::Cell<&ReLateBound(DebruijnIndex(0), BoundRegion { var: 1, kind: BrNamed('s) }) u32>, &ReLateBound(DebruijnIndex(0), BoundRegion { var: 3, kind: BrNamed('t1) }) std::cell::Cell<&ReLateBound(DebruijnIndex(0), BoundRegion { var: 4, kind: BrNamed('t2) }) u32>)),
               (),
           ]
   = note: late-bound region is '_#2r
   = note: late-bound region is '_#3r
   = note: number of external vids: 4
   = note: where '_#1r: '_#0r

note: no external requirements
  --> $DIR/propagate-approximated-shorter-to-static-no-bound.rs:31:1
   |
LL | / fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {
LL | |     establish_relationships(&cell_a, &cell_b, |_outlives, x, y| {
LL | |
LL | |
...  |
LL | |     });
LL | | }
   | |_^
   |
   = note: defining type: supply

error[E0521]: borrowed data escapes outside of function
  --> $DIR/propagate-approximated-shorter-to-static-no-bound.rs:32:5
   |
LL |   fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {
   |             --      ------ `cell_a` is a reference that is only valid in the function body
   |             |
   |             lifetime `'a` defined here
LL | /     establish_relationships(&cell_a, &cell_b, |_outlives, x, y| {
LL | |
LL | |
LL | |         // Only works if 'x: 'y:
LL | |         demand_y(x, y, x.get())
LL | |     });
   | |      ^
   | |      |
   | |______`cell_a` escapes the function body here
   |        argument requires that `'a` must outlive `'static`
   |
   = note: requirement occurs because of the type Cell<&'_#10r u32>, which makes the generic argument &'_#10r u32 invariant
   = note: the struct Cell<T> is invariant over the parameter T
   = help: see <https://doc.rust-lang.org/nomicon/subtyping.html> for more information about variance

error: aborting due to previous error

For more information about this error, try `rustc --explain E0521`.
