error[E0261]: use of undeclared lifetime name `'x`
  --> $DIR/feature-gate-in_band_lifetimes.rs:3:12
   |
LL | fn foo(x: &'x u8) -> &'x u8 { x }
   |       -    ^^ undeclared lifetime
   |       |
   |       help: consider introducing lifetime `'x` here: `<'x>`
   |
   = help: if you want to experiment with in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes

error[E0261]: use of undeclared lifetime name `'x`
  --> $DIR/feature-gate-in_band_lifetimes.rs:3:23
   |
LL | fn foo(x: &'x u8) -> &'x u8 { x }
   |       -               ^^ undeclared lifetime
   |       |
   |       help: consider introducing lifetime `'x` here: `<'x>`
   |
   = help: if you want to experiment with in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes

error[E0261]: use of undeclared lifetime name `'b`
  --> $DIR/feature-gate-in_band_lifetimes.rs:15:12
   |
LL | impl<'a> X<'b> {
   |      -     ^^ undeclared lifetime
   |      |
   |      help: consider introducing lifetime `'b` here: `'b,`

error[E0261]: use of undeclared lifetime name `'b`
  --> $DIR/feature-gate-in_band_lifetimes.rs:17:27
   |
LL |     fn inner_2(&self) -> &'b u8 {
   |                           ^^ undeclared lifetime
   |
   = help: if you want to experiment with in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes
help: consider introducing lifetime `'b` here
   |
LL | impl<'b, 'a> X<'b> {
   |      +++
help: consider introducing lifetime `'b` here
   |
LL |     fn inner_2<'b>(&self) -> &'b u8 {
   |               ++++

error[E0261]: use of undeclared lifetime name `'b`
  --> $DIR/feature-gate-in_band_lifetimes.rs:23:8
   |
LL | impl X<'b> {
   |     -  ^^ undeclared lifetime
   |     |
   |     help: consider introducing lifetime `'b` here: `<'b>`
   |
   = help: if you want to experiment with in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes

error[E0261]: use of undeclared lifetime name `'b`
  --> $DIR/feature-gate-in_band_lifetimes.rs:25:27
   |
LL |     fn inner_3(&self) -> &'b u8 {
   |                           ^^ undeclared lifetime
   |
   = help: if you want to experiment with in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes
help: consider introducing lifetime `'b` here
   |
LL | impl<'b> X<'b> {
   |     ++++
help: consider introducing lifetime `'b` here
   |
LL |     fn inner_3<'b>(&self) -> &'b u8 {
   |               ++++

error[E0261]: use of undeclared lifetime name `'a`
  --> $DIR/feature-gate-in_band_lifetimes.rs:33:9
   |
LL | impl Y<&'a u8> {
   |     -   ^^ undeclared lifetime
   |     |
   |     help: consider introducing lifetime `'a` here: `<'a>`
   |
   = help: if you want to experiment with in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes

error[E0261]: use of undeclared lifetime name `'a`
  --> $DIR/feature-gate-in_band_lifetimes.rs:35:25
   |
LL |     fn inner(&self) -> &'a u8 {
   |                         ^^ undeclared lifetime
   |
   = help: if you want to experiment with in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes
help: consider introducing lifetime `'a` here
   |
LL | impl<'a> Y<&'a u8> {
   |     ++++
help: consider introducing lifetime `'a` here
   |
LL |     fn inner<'a>(&self) -> &'a u8 {
   |             ++++

error[E0261]: use of undeclared lifetime name `'a`
  --> $DIR/feature-gate-in_band_lifetimes.rs:50:14
   |
LL | impl MyTrait<'a> for Y<&'a u8> {
   |     -        ^^ undeclared lifetime
   |     |
   |     help: consider introducing lifetime `'a` here: `<'a>`
   |
   = help: if you want to experiment with in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes

error[E0261]: use of undeclared lifetime name `'a`
  --> $DIR/feature-gate-in_band_lifetimes.rs:50:25
   |
LL | impl MyTrait<'a> for Y<&'a u8> {
   |     -                   ^^ undeclared lifetime
   |     |
   |     help: consider introducing lifetime `'a` here: `<'a>`
   |
   = help: if you want to experiment with in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes

error[E0261]: use of undeclared lifetime name `'a`
  --> $DIR/feature-gate-in_band_lifetimes.rs:53:31
   |
LL |     fn my_lifetime(&self) -> &'a u8 { self.0 }
   |                               ^^ undeclared lifetime
   |
   = help: if you want to experiment with in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes
help: consider introducing lifetime `'a` here
   |
LL | impl<'a> MyTrait<'a> for Y<&'a u8> {
   |     ++++
help: consider introducing lifetime `'a` here
   |
LL |     fn my_lifetime<'a>(&self) -> &'a u8 { self.0 }
   |                   ++++

error[E0261]: use of undeclared lifetime name `'b`
  --> $DIR/feature-gate-in_band_lifetimes.rs:55:27
   |
LL |     fn any_lifetime() -> &'b u8 { &0 }
   |                           ^^ undeclared lifetime
   |
   = help: if you want to experiment with in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes
help: consider introducing lifetime `'b` here
   |
LL | impl<'b> MyTrait<'a> for Y<&'a u8> {
   |     ++++
help: consider introducing lifetime `'b` here
   |
LL |     fn any_lifetime<'b>() -> &'b u8 { &0 }
   |                    ++++

error[E0261]: use of undeclared lifetime name `'b`
  --> $DIR/feature-gate-in_band_lifetimes.rs:57:27
   |
LL |     fn borrowed_lifetime(&'b self) -> &'b u8 { &*self.0 }
   |                           ^^ undeclared lifetime
   |
   = help: if you want to experiment with in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes
help: consider introducing lifetime `'b` here
   |
LL | impl<'b> MyTrait<'a> for Y<&'a u8> {
   |     ++++
help: consider introducing lifetime `'b` here
   |
LL |     fn borrowed_lifetime<'b>(&'b self) -> &'b u8 { &*self.0 }
   |                         ++++

error[E0261]: use of undeclared lifetime name `'b`
  --> $DIR/feature-gate-in_band_lifetimes.rs:57:40
   |
LL |     fn borrowed_lifetime(&'b self) -> &'b u8 { &*self.0 }
   |                                        ^^ undeclared lifetime
   |
   = help: if you want to experiment with in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes
help: consider introducing lifetime `'b` here
   |
LL | impl<'b> MyTrait<'a> for Y<&'a u8> {
   |     ++++
help: consider introducing lifetime `'b` here
   |
LL |     fn borrowed_lifetime<'b>(&'b self) -> &'b u8 { &*self.0 }
   |                         ++++

error[E0261]: use of undeclared lifetime name `'b`
  --> $DIR/feature-gate-in_band_lifetimes.rs:43:27
   |
LL |     fn any_lifetime() -> &'b u8;
   |                           ^^ undeclared lifetime
   |
   = help: if you want to experiment with in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes
help: consider introducing lifetime `'b` here
   |
LL | trait MyTrait<'b, 'a> {
   |               +++
help: consider introducing lifetime `'b` here
   |
LL |     fn any_lifetime<'b>() -> &'b u8;
   |                    ++++

error[E0261]: use of undeclared lifetime name `'b`
  --> $DIR/feature-gate-in_band_lifetimes.rs:45:27
   |
LL |     fn borrowed_lifetime(&'b self) -> &'b u8;
   |                           ^^ undeclared lifetime
   |
   = help: if you want to experiment with in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes
help: consider introducing lifetime `'b` here
   |
LL | trait MyTrait<'b, 'a> {
   |               +++
help: consider introducing lifetime `'b` here
   |
LL |     fn borrowed_lifetime<'b>(&'b self) -> &'b u8;
   |                         ++++

error[E0261]: use of undeclared lifetime name `'b`
  --> $DIR/feature-gate-in_band_lifetimes.rs:45:40
   |
LL |     fn borrowed_lifetime(&'b self) -> &'b u8;
   |                                        ^^ undeclared lifetime
   |
   = help: if you want to experiment with in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes
help: consider introducing lifetime `'b` here
   |
LL | trait MyTrait<'b, 'a> {
   |               +++
help: consider introducing lifetime `'b` here
   |
LL |     fn borrowed_lifetime<'b>(&'b self) -> &'b u8;
   |                         ++++

error: aborting due to 17 previous errors

For more information about this error, try `rustc --explain E0261`.
