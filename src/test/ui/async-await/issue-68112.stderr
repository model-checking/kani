error: future cannot be sent between threads safely
  --> $DIR/issue-68112.rs:34:5
   |
LL |     require_send(send_fut);
   |     ^^^^^^^^^^^^ future created by async block is not `Send`
   |
   = help: the trait `Sync` is not implemented for `RefCell<i32>`
note: future is not `Send` as it awaits another future which is not `Send`
  --> $DIR/issue-68112.rs:31:17
   |
LL |         let _ = non_send_fut.await;
   |                 ^^^^^^^^^^^^ await occurs here on type `impl Future<Output = Arc<RefCell<i32>>>`, which is not `Send`
note: required by a bound in `require_send`
  --> $DIR/issue-68112.rs:11:25
   |
LL | fn require_send(_: impl Send) {}
   |                         ^^^^ required by this bound in `require_send`

error: future cannot be sent between threads safely
  --> $DIR/issue-68112.rs:43:5
   |
LL |     require_send(send_fut);
   |     ^^^^^^^^^^^^ future created by async block is not `Send`
   |
   = help: the trait `Sync` is not implemented for `RefCell<i32>`
note: future is not `Send` as it awaits another future which is not `Send`
  --> $DIR/issue-68112.rs:40:17
   |
LL |         let _ = make_non_send_future1().await;
   |                 ^^^^^^^^^^^^^^^^^^^^^^^ await occurs here on type `impl Future<Output = Arc<RefCell<i32>>>`, which is not `Send`
note: required by a bound in `require_send`
  --> $DIR/issue-68112.rs:11:25
   |
LL | fn require_send(_: impl Send) {}
   |                         ^^^^ required by this bound in `require_send`

error[E0277]: `RefCell<i32>` cannot be shared between threads safely
  --> $DIR/issue-68112.rs:60:5
   |
LL |     require_send(send_fut);
   |     ^^^^^^^^^^^^ `RefCell<i32>` cannot be shared between threads safely
   |
   = help: the trait `Sync` is not implemented for `RefCell<i32>`
   = note: required because of the requirements on the impl of `Send` for `Arc<RefCell<i32>>`
   = note: required because it appears within the type `[static generator@$DIR/issue-68112.rs:47:31: 47:36]`
   = note: required because it appears within the type `from_generator::GenFuture<[static generator@$DIR/issue-68112.rs:47:31: 47:36]>`
   = note: required because it appears within the type `impl Future<Output = [async output]>`
   = note: required because it appears within the type `impl Future<Output = Arc<RefCell<i32>>>`
   = note: required because it appears within the type `impl Future<Output = Arc<RefCell<i32>>>`
   = note: required because it appears within the type `{ResumeTy, impl Future<Output = Arc<RefCell<i32>>>, (), i32, Ready<i32>}`
   = note: required because it appears within the type `[static generator@$DIR/issue-68112.rs:55:26: 59:6]`
   = note: required because it appears within the type `from_generator::GenFuture<[static generator@$DIR/issue-68112.rs:55:26: 59:6]>`
   = note: required because it appears within the type `impl Future<Output = [async output]>`
note: required by a bound in `require_send`
  --> $DIR/issue-68112.rs:11:25
   |
LL | fn require_send(_: impl Send) {}
   |                         ^^^^ required by this bound in `require_send`

error: aborting due to 3 previous errors

For more information about this error, try `rustc --explain E0277`.
