error: future cannot be sent between threads safely
  --> $DIR/issue-65436-raw-ptr-not-send.rs:12:5
   |
LL |     assert_send(async {
   |     ^^^^^^^^^^^ future created by async block is not `Send`
   |
   = help: within `impl Future<Output = [async output]>`, the trait `Send` is not implemented for `*const u8`
note: future is not `Send` as this value is used across an await
  --> $DIR/issue-65436-raw-ptr-not-send.rs:14:9
   |
LL |         bar(Foo(std::ptr::null())).await;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ first, await occurs here, with `std::ptr::null()` maybe used later...
note: `std::ptr::null()` is later dropped here
  --> $DIR/issue-65436-raw-ptr-not-send.rs:14:41
   |
LL |         bar(Foo(std::ptr::null())).await;
   |                 ----------------        ^
   |                 |
   |                 has type `*const u8` which is not `Send`
help: consider moving this into a `let` binding to create a shorter lived borrow
  --> $DIR/issue-65436-raw-ptr-not-send.rs:14:13
   |
LL |         bar(Foo(std::ptr::null())).await;
   |             ^^^^^^^^^^^^^^^^^^^^^
note: required by a bound in `assert_send`
  --> $DIR/issue-65436-raw-ptr-not-send.rs:9:19
   |
LL | fn assert_send<T: Send>(_: T) {}
   |                   ^^^^ required by this bound in `assert_send`

error: aborting due to previous error

