warning: the feature `specialization` is incomplete and may not be safe to use and/or cause compiler crashes
  --> $DIR/specialization-trait-not-implemented.rs:5:12
   |
LL | #![feature(specialization)]
   |            ^^^^^^^^^^^^^^
   |
   = note: `#[warn(incomplete_features)]` on by default
   = note: see issue #31844 <https://github.com/rust-lang/rust/issues/31844> for more information
   = help: consider using `min_specialization` instead, which is more stable and complete

error[E0599]: the method `foo_one` exists for struct `MyStruct`, but its trait bounds were not satisfied
  --> $DIR/specialization-trait-not-implemented.rs:22:29
   |
LL | struct MyStruct;
   | ----------------
   | |
   | method `foo_one` not found for this
   | doesn't satisfy `MyStruct: Foo`
...
LL |     println!("{}", MyStruct.foo_one());
   |                             ^^^^^^^ method cannot be called on `MyStruct` due to unsatisfied trait bounds
   |
note: the following trait bounds were not satisfied because of the requirements of the implementation of `Foo` for `_`:
      `MyStruct: Foo`
  --> $DIR/specialization-trait-not-implemented.rs:14:17
   |
LL | default impl<T> Foo for T {
   |                 ^^^     ^
note: the following trait must be implemented
  --> $DIR/specialization-trait-not-implemented.rs:7:1
   |
LL | / trait Foo {
LL | |     fn foo_one(&self) -> &'static str;
LL | |     fn foo_two(&self) -> &'static str;
LL | | }
   | |_^
   = help: items from traits can only be used if the trait is implemented and in scope
note: `Foo` defines an item `foo_one`, perhaps you need to implement it
  --> $DIR/specialization-trait-not-implemented.rs:7:1
   |
LL | trait Foo {
   | ^^^^^^^^^

error: aborting due to previous error; 1 warning emitted

For more information about this error, try `rustc --explain E0599`.
