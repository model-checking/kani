# SPDX-License-Identifier: Apache-2.0 OR MIT
#
# Modifications Copyright Kani Contributors
# See GitHub history for details.

[package]
name = "proptest"
version = "1.0.0"
authors = ["Jason Lingle", "Kani Contributors"]
license = "MIT/Apache-2.0"
readme = "README.md"
repository = "https://github.com/model-checking/kani"
homepage = "https://altsysrq.github.io/proptest-book/proptest/index.html"
documentation = "https://model-checking.github.io/kani/"
keywords = ["property", "model-checking", "verification"]
categories = ["development-tools::testing"]
edition = "2018"
exclude = ["/gen-*.sh", "/readme-*.md"]

description = """
Hypothesis-like property-based testing and shrinking.

This version has been modified by the Kani Developers to run proptests with Kani.
"""

[features]

default = ["std", "fork", "timeout", "break-dead-code"]
# Everything in `default` that doesn't break code coverage builds
default-code-coverage = ["std", "fork", "timeout" ]

# Enables unstable features of Rust.
unstable = []

# Enables the use of standard-library dependent features
std = ["lazy_static", "quick-error"]

# For use in no_std environments with access to an allocator
#alloc = ["hashmap_core"]
alloc = []

# Use a hardware random number generator (instead of static seed) for x86 no_std targets
hardware-rng = []

# Enables use of the "fork" feature.
#
# Requires std.
fork = ["std"]

# Enables use of the "timeout" feature.
#
# Requires the "fork" feature.
timeout = ["fork"]

# Enables support for 64-bit atomic integers.
# This is enabled by default. Some no_std environments do not support it and
# need it excluded, however.
atomic64bit = []

# Include features which break the Rust compiler when `-C link-dead-code` is
# passed (see https://github.com/AltSysrq/proptest/issues/124).
break-dead-code = []

[dependencies]
bitflags = "1.0.1"

[dependencies.lazy_static]
version = "1.2"
optional = true

[dependencies.num-traits]
version = "0.2.2"
default-features = false

[dependencies.quick-error]
version = "2.0.0"
optional = true

[dependencies.bit-set]
version = "0.5.0"
# It doesn't currently work with no_std
# default-features = false
optional = true

[dependencies.rand]
version = "0.8"
default-features = false
features = ["alloc"]

[target.'cfg(not(kani))'.dependencies]
kani = { path = "../kani/library/kani" }
