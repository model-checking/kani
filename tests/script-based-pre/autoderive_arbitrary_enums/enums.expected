Kani generated automatic harnesses for 8 function(s):
+----------------------------+------------------------------------------------+
| Crate                      | Selected Function                              |
+=============================================================================+
| autoderive_arbitrary_enums | should_derive::Foo::AnonMultipleVariant        |
|----------------------------+------------------------------------------------|
| autoderive_arbitrary_enums | should_derive::Foo::AnonVariant                |
|----------------------------+------------------------------------------------|
| autoderive_arbitrary_enums | should_derive::alignment_fail                  |
|----------------------------+------------------------------------------------|
| autoderive_arbitrary_enums | should_derive::alignment_pass                  |
|----------------------------+------------------------------------------------|
| autoderive_arbitrary_enums | should_derive::foo                             |
|----------------------------+------------------------------------------------|
| autoderive_arbitrary_enums | should_not_derive::NotAllVariantsEligible::Num |
|----------------------------+------------------------------------------------|
| autoderive_arbitrary_enums | should_not_derive::NotAllVariantsEligible::Pin |
|----------------------------+------------------------------------------------|
| autoderive_arbitrary_enums | should_not_derive::RecursivelyEligible::Foo    |
+----------------------------+------------------------------------------------+

Kani did not generate automatic harnesses for 10 function(s).
+----------------------------+-----------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------+
| Crate                      | Skipped Function                                                            | Reason for Skipping                                                                                                        |
+=======================================================================================================================================================================================================================================+
| autoderive_arbitrary_enums | <should_derive::AlignmentEnum as std::cmp::Eq>::assert_receiver_is_total_eq | Missing Arbitrary implementation for argument(s) self: &should_derive::AlignmentEnum                                       |
|----------------------------+-----------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------|
| autoderive_arbitrary_enums | <should_derive::AlignmentEnum as std::cmp::PartialEq>::eq                   | Missing Arbitrary implementation for argument(s) self: &should_derive::AlignmentEnum, other: &should_derive::AlignmentEnum |
|----------------------------+-----------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------|
| autoderive_arbitrary_enums | should_not_derive::NoVariantsEligible::Ptr                                  | Missing Arbitrary implementation for argument(s) _: *const i8                                                              |
|----------------------------+-----------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------|
| autoderive_arbitrary_enums | should_not_derive::NoVariantsEligible::Str                                  | Missing Arbitrary implementation for argument(s) _: &str                                                                   |
|----------------------------+-----------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------|
| autoderive_arbitrary_enums | should_not_derive::NotAllVariantsEligible::Ref                              | Missing Arbitrary implementation for argument(s) _: &mut i32                                                               |
|----------------------------+-----------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------|
| autoderive_arbitrary_enums | should_not_derive::never                                                    | Missing Arbitrary implementation for argument(s) n: should_not_derive::Never                                               |
|----------------------------+-----------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------|
| autoderive_arbitrary_enums | should_not_derive::no_variants_eligible                                     | Missing Arbitrary implementation for argument(s) val: should_not_derive::NoVariantsEligible                                |
|----------------------------+-----------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------|
| autoderive_arbitrary_enums | should_not_derive::not_all_variants_eligible                                | Missing Arbitrary implementation for argument(s) val: should_not_derive::NotAllVariantsEligible                            |
|----------------------------+-----------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------|
| autoderive_arbitrary_enums | should_not_derive::recursively_eligible                                     | Missing Arbitrary implementation for argument(s) val: should_not_derive::RecursivelyEligible                               |
|----------------------------+-----------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------|
| autoderive_arbitrary_enums | should_not_derive::some_arguments_support                                   | Missing Arbitrary implementation for argument(s) val: should_not_derive::NotAllVariantsEligible                            |
+----------------------------+-----------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------+

should_derive::alignment_pass\
	 - Status: SUCCESS\
	 - Description: "assertion failed: std::mem::align_of_val(&int) % (align as usize) == 0"

should_derive::alignment_fail.assertion\
	 - Status: FAILURE\
	 - Description: "assertion failed: std::mem::align_of_val(&int) % (align as usize) == 0"

should_derive::foo.assertion\
	 - Status: FAILURE\
	 - Description: "attempt to calculate the remainder with a divisor of zero"

should_derive::foo.assertion\
	 - Status: FAILURE\
	 - Description: "attempt to calculate the remainder with overflow"

should_derive::foo.assertion\
	 - Status: FAILURE\
	 - Description: "foo held an i28, but it didn't divide evenly"

Autoharness Summary:
+----------------------------+------------------------------------------------+-----------------------------+---------------------+
| Crate                      | Selected Function                              | Kind of Automatic Harness   | Verification Result |
+=================================================================================================================================+
| autoderive_arbitrary_enums | should_derive::Foo::AnonMultipleVariant        | #[kani::proof]              | Success             |
|----------------------------+------------------------------------------------+-----------------------------+---------------------|
| autoderive_arbitrary_enums | should_derive::Foo::AnonVariant                | #[kani::proof]              | Success             |
|----------------------------+------------------------------------------------+-----------------------------+---------------------|
| autoderive_arbitrary_enums | should_derive::alignment_pass                  | #[kani::proof_for_contract] | Success             |
|----------------------------+------------------------------------------------+-----------------------------+---------------------|
| autoderive_arbitrary_enums | should_not_derive::NotAllVariantsEligible::Num | #[kani::proof]              | Success             |
|----------------------------+------------------------------------------------+-----------------------------+---------------------|
| autoderive_arbitrary_enums | should_not_derive::NotAllVariantsEligible::Pin | #[kani::proof]              | Success             |
|----------------------------+------------------------------------------------+-----------------------------+---------------------|
| autoderive_arbitrary_enums | should_not_derive::RecursivelyEligible::Foo    | #[kani::proof]              | Success             |
|----------------------------+------------------------------------------------+-----------------------------+---------------------|
| autoderive_arbitrary_enums | should_derive::alignment_fail                  | #[kani::proof]              | Failure             |
|----------------------------+------------------------------------------------+-----------------------------+---------------------|
| autoderive_arbitrary_enums | should_derive::foo                             | #[kani::proof]              | Failure             |
+----------------------------+------------------------------------------------+-----------------------------+---------------------+
