attempt to compute `move _8 + move _9`, which would overflow: SUCCESS
assertion failed: a + b == correct: SUCCESS
attempt to compute `move _15 + move _16`, which would overflow: SUCCESS
assertion failed: a + b == wrong: FAILURE
attempt to compute `move _8 - move _9`, which would overflow: SUCCESS
assertion failed: a - b == correct: SUCCESS
attempt to compute `move _15 - move _16`, which would overflow: SUCCESS
assertion failed: a - b == wrong: FAILURE
attempt to compute `move _8 * move _9`, which would overflow: SUCCESS
assertion failed: a * b == correct: SUCCESS
attempt to compute `move _15 * move _16`, which would overflow: SUCCESS
assertion failed: a * b == wrong: FAILURE
attempt to divide `_8` by zero: SUCCESS
attempt to compute `_8 / _9`, which would overflow: SUCCESS
assertion failed: a / b == correct: SUCCESS
attempt to divide `_18` by zero: SUCCESS
attempt to compute `_18 / _19`, which would overflow: SUCCESS
assertion failed: a / b == wrong: FAILURE
attempt to calculate the remainder of `_8` with a divisor of zero: SUCCESS
attempt to compute the remainder of `_8 % _9`, which would overflow: SUCCESS
assertion failed: a % b == correct: SUCCESS
attempt to calculate the remainder of `_18` with a divisor of zero: SUCCESS
attempt to compute the remainder of `_18 % _19`, which would overflow: SUCCESS
assertion failed: a % b == wrong: FAILURE
attempt to shift left by `move _9`, which would overflow: SUCCESS
assertion failed: a << b == correct: SUCCESS
attempt to shift left by `move _16`, which would overflow: SUCCESS
assertion failed: a << b == wrong: FAILURE
attempt to shift right by `move _9`, which would overflow: SUCCESS
assertion failed: a >> b == correct: SUCCESS
attempt to shift right by `move _16`, which would overflow: SUCCESS
assertion failed: a >> b == wrong: FAILURE
attempt to shift right by `move _9`, which would overflow: SUCCESS
assertion failed: a >> b == correct: SUCCESS
attempt to shift right by `move _16`, which would overflow: SUCCESS
assertion failed: a >> b == wrong: FAILURE
assertion failed: a & b == correct: SUCCESS
assertion failed: a & b == wrong: FAILURE
assertion failed: a | b == correct: SUCCESS
assertion failed: a | b == wrong: FAILURE
assertion failed: a ^ b == correct: SUCCESS
assertion failed: a ^ b == wrong: FAILURE
