Checking harness check_non_empty_raw...

Status: SUCCESS\
Description: "assertion failed: mem::size_of_val(raw) == 4"\
slice.rs:61:5 in function check_non_empty_raw

Status: SUCCESS\
Description: "assertion failed: raw.inner.len() == 4"\
slice.rs:62:5 in function check_non_empty_raw

Status: SUCCESS\
Description: "assertion failed: raw.inner[0] == 1"\
slice.rs:63:5 in function check_non_empty_raw

VERIFICATION:- SUCCESSFUL

Checking harness check_empty_raw...

Status: SUCCESS\
Description: "assertion failed: mem::size_of_val(raw) == 0"\
slice.rs:70:5 in function check_empty_raw

Status: SUCCESS\
Description: "assertion failed: raw.inner.len() == 0"\
slice.rs:71:5 in function check_empty_raw

VERIFICATION:- SUCCESSFUL

Checking harness check_non_empty_slice...

Status: SUCCESS\
Description: "assertion failed: mem::size_of_val(slice) == 2"\
slice.rs:78:5 in function check_non_empty_slice

Status: SUCCESS\
Description: "assertion failed: slice.others.len() == 1"\
slice.rs:79:5 in function check_non_empty_slice

Status: SUCCESS\
Description: "assertion failed: slice.first == 1"\
slice.rs:80:5 in function check_non_empty_slice

Status: SUCCESS\
Description: "assertion failed: slice.others[0] == 5"\
slice.rs:81:5 in function check_non_empty_slice

VERIFICATION:- SUCCESSFUL


Checking harness check_naive_iterator_should_fail...

Status: SUCCESS\
Description: ""Naive new should have the wrong slice len""\
slice.rs:94:5 in function check_naive_iterator_should_fail

Status: SUCCESS\
Description: "assertion failed: slice.first == first"\
slice.rs:95:5 in function check_naive_iterator_should_fail

Status: SUCCESS\
Description: "assertion failed: slice.others[0] == second"\
slice.rs:96:5 in function check_naive_iterator_should_fail

Status: FAILURE\
Description: "dereference failure: pointer outside object bounds"\
slice.rs:100:32 in function check_naive_iterator_should_fail

VERIFICATION:- FAILED


Summary:\
Verification failed for - check_naive_iterator_should_fail\
Complete - 3 successfully verified harnesses, 1 failures, 4 total.
