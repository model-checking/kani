# Copyright Kani Contributors
# SPDX-License-Identifier: Apache-2.0 OR MIT
name: Kani CI
on: [push, pull_request]

jobs:
  regression:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-10.15, ubuntu-18.04, ubuntu-20.04]
    steps:
      - name: Checkout Kani
        uses: actions/checkout@v2

      - name: Setup Kani Dependencies
        uses: ./.github/actions/setup
        with:
            os: ${{ matrix.os }}

      - name: Build Kani
        run: |
          export RUST_BACKTRACE=1
          cargo build --workspace

      - name: Execute Kani regression
        run: ./scripts/kani-regression.sh

  bookrunner:
    runs-on: ubuntu-20.04
    permissions:
      contents: write
    steps:
      - name: Checkout Kani
        uses: actions/checkout@v2

      - name: Setup Kani Dependencies
        uses: ./.github/actions/setup
        with:
            os: ubuntu-20.04

      - name: Build Kani
        run: |
          export RUST_BACKTRACE=1
          cargo build --workspace

      - name: Install book runner dependencies
        run: ./scripts/setup/install_bookrunner_deps.sh

      - name: Generate book runner report
        run: cargo run -p bookrunner
        env:
            DOC_RUST_LANG_ORG_CHANNEL: nightly

      - name: Print book runner text results
        run: cat build/output/latest/html/bookrunner.txt

      - name: Detect unpexpected book runner failures
        run: ./scripts/ci/detect_bookrunner_failures.sh build/output/latest/html/bookrunner.txt

      # On one OS only, build the documentation, too.
      - name: Build Documentation
        run: ./docs/build-docs.sh

      # When we're pushed to main branch, only then actually publish the docs.
      - name: Publish Documentation
        if: ${{ github.event_name == 'push' && startsWith('refs/heads/main', github.ref) }}
        uses: JamesIves/github-pages-deploy-action@v4.3.3
        with:
          branch: gh-pages
          folder: docs/book/
          single-commit: true

  releasebundle:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-10.15, ubuntu-20.04]
        include:
          - os: macos-10.15
            artifact: kani-latest-x86_64-apple-darwin.tar.gz
          - os: ubuntu-20.04
            artifact: kani-latest-x86_64-unknown-linux-gnu.tar.gz
    steps:
      - name: Checkout Kani
        uses: actions/checkout@v2

      - name: Setup Kani Dependencies
        uses: ./.github/actions/setup
        with:
            os: ${{ matrix.os }}
      
      - name: Build release bundle
        run: |
          cargo run -p make-kani-release -- latest
          cargo package -p kani-verifier
      
      - name: Build container test
        if: ${{ matrix.os == 'ubuntu-20.04' }}
        run: |
          docker build -t kani-latest -f scripts/ci/Dockerfile.release-bundle-test .

      - name: Run installed tests
        if: ${{ matrix.os == 'ubuntu-20.04' }}
        run: |
          docker run -w /tmp/kani/tests/cargo-kani/simple-lib  kani-latest  cargo kani
          docker run -w /tmp/kani/tests/cargo-kani/simple-visualize  kani-latest  cargo kani

      # We can't run macos in a container, so we can only test locally.
      # Hopefully any dependency issues won't be unique to macos.
      - name: Local install test
        if: ${{ matrix.os == 'macos-10.15' }}
        run: |
          cargo install --path ./target/package/kani-verifier-*[^e]
          cargo-kani setup --use-local-bundle ./kani-latest-x86_64-apple-darwin.tar.gz
          (cd tests/cargo-kani/simple-lib && cargo kani)
          (cd tests/cargo-kani/simple-visualize && cargo kani)

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact }}
          path: ${{ matrix.artifact }}
          if-no-files-found: error
          # Aggressively short retention: we don't really need these
          retention-days: 3
