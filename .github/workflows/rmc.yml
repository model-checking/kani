# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0 OR MIT
name: RMC CI
on: [push, pull_request]

jobs:
  regression:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-10.15, ubuntu-18.04, ubuntu-20.04]
    permissions:
      contents: write
    steps:
      - name: Checkout RMC
        uses: actions/checkout@v2
        # https://github.com/rust-lang/rust/issues/87890
        # A non-shallow clone is unfortunately necessary, as bootstrap.py searches commit history
        # to find the correct LLVM artifacts to download. (0 below indicates non-shallow)
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: ./scripts/setup/${{ matrix.os }}/install_deps.sh

      - name: Install CBMC
        run: ./scripts/setup/${{ matrix.os }}/install_cbmc.sh

      - name: Install cbmc-viewer
        run: ./scripts/setup/install_viewer.sh 2.6

      - name: Install Rust toolchain
        run: ./scripts/setup/install_rustup.sh

      - name: Set config.toml file
        run: |
          ./configure \
            --enable-debug \
            --set=llvm.download-ci-llvm=true \
            --set=rust.debug-assertions-std=false \
            --set=rust.deny-warnings=false

      - name: Update submodules
        run: |
          # Since we download cached artifacts, we can skip checking out llvm locally in CI
          git config submodule."src/llvm-project".update none
          git submodule update --init --depth 1

      - name: Build RMC
        run: |
          export RUST_BACKTRACE=1
          ./x.py build -i --stage 1 library/std

      - name: Build RMC Library
        run: bash -x ./scripts/setup/build_rmc_lib.sh

      - name: Execute RMC regression
        run: ./scripts/rmc-regression.sh

      - name: Install dashboard dependencies
        if: ${{ matrix.os == 'ubuntu-20.04' && github.event_name == 'push' && startsWith('refs/heads/main', github.ref) }}
        run: ./scripts/setup/install_dashboard_deps.sh

      - name: Generate RMC dashboard
        if: ${{ matrix.os == 'ubuntu-20.04' && github.event_name == 'push' && startsWith('refs/heads/main', github.ref) }}
        run: ./x.py run -i --stage 1 dashboard

      # On one OS only, build the documentation, too.
      - name: Build Documentation
        if: ${{ matrix.os == 'ubuntu-20.04' }}
        run: ./rmc-docs/build-docs.sh

      # When we're pushed to main branch, only then actually publish the docs.
      - name: Publish Documentation
        if: ${{ matrix.os == 'ubuntu-20.04' && github.event_name == 'push' && startsWith('refs/heads/main', github.ref) }}
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          folder: rmc-docs/book/
